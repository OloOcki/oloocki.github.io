global:
    language: en
    language_text_source: |
        function() {
            return (global.language && feature['name:'+global.language]) || feature.name;
        }
    sort_rank: |
        function() {
            return (feature.sort_rank)
            }

fonts:
    FiraGo:
        - weight: 400
          url: https://assets.vector.hereapi.com/fonts/FiraGO-Regular.ttf
        - weight: 400
        - style: italics
          url: https://assets.vector.hereapi.com/fonts/FiraGO-Italic.ttf
        - weight: 500
          url: https://assets.vector.hereapi.com/fonts/FiraGO-Medium.ttf            


cameras:
    camera1:
        type: isometric

lights:
    light1:
        type: directional
        direction: [0, 1, -.5]
        diffuse: 1.1
        ambient: 1
styles:
    dangerZones:
        base: polygons
        blend: overlay
        blend_order: 360
    slowDown:
        base: points
        blend: overlay
        blend_order: 362
        texture: img/slowDown.png 
    callTheWinterMaintanance:
        base: points
        blend: overlay
        blend_order: 363
        texture: img/winterDienst.png 
    whereIsAStreetLight:
        base: points
        blend: overlay
        blend_order: 364
        texture: img/streetLightnew.png
    mostDangerousRoadJunctions:
        base: points
        blend: overlay
        blend_order: 365
        texture: img/dangerJunctions.png
    buildingsStyle:
        base: polygons
        blend: overlay
        blend_order: 361


sources:
    xyz_osm:
        type: MVT
        url: https://xyz.api.here.com/tiles/osmbase/256/all/{z}/{x}/{y}.mvt
        max_zoom: 16
        url_params:
            access_token: 'AFgtnKKCSqm4ulfb-kXPEwA'

    mostDangerousRoadJunctions:
        url: https://xyz.api.here.com/hub/spaces/xOCBhaZp/tile/web/{z}_{x}_{y}
        type: GeoJSON
        url_params:
            access_token: 'AFgtnKKCSqm4ulfb-kXPEwA'

    slowDown:
        url: https://xyz.api.here.com/hub/spaces/RokXEFZw/tile/web/{z}_{x}_{y} 
        type: GeoJSON
        url_params:
            access_token: 'AFgtnKKCSqm4ulfb-kXPEwA'

    callTheWinterMaintanance:
        url: https://xyz.api.here.com/hub/spaces/NtkmLRIZ/tile/web/{z}_{x}_{y}
        type: GeoJSON
        url_params:
            access_token: 'AFgtnKKCSqm4ulfb-kXPEwA' 

    whereIsAStreetLight:
        url: https://xyz.api.here.com/hub/spaces/ZeC9FdTU/tile/web/{z}_{x}_{y} 
        type: GeoJSON
        url_params:
            access_token: 'AFgtnKKCSqm4ulfb-kXPEwA'

    accidentsPerCell:
        url: https://xyz.api.here.com/hub/spaces/4RIPxoLf/tile/web/{z}_{x}_{y}
        type: GeoJSON
        url_params:
            access_token: 'AFgtnKKCSqm4ulfb-kXPEwA'
            

layers:
    earth:
        data: { source: xyz_osm }
        draw:
            polygons:
                order: function() { return feature.sort_rank; }
                color: '#2c2c2c'

    landuse:
        data: { source: xyz_osm }
        draw:
            polygons:
                order: function() { return feature.sort_rank; }
                color: '#2b2e2b'

    water:
        data: { source: xyz_osm }
        draw:
            polygons:
                order: function() { return feature.sort_rank; }
                color: '#1d1d1f'
        label:
            filter:
                - $zoom: { min: 15}
            draw:
                text:
                    font:

                        text_source: global.language_text_source
                        family: FiraGo
                        size: 16
                        order: function() { return feature.sort_rank + 1; }
                        priority: 15
                        fill: '#999999'
                        stroke: {color: [0.078, 0.078, 0.078, 1.00], width: 2
                        }        

    roads:
        data: { source: xyz_osm }
        filter:
            not: { kind: [path, rail, ferry] }
        draw:
            lines:
                order: function() { return feature.sort_rank; }
                color: '#4f4b4b'
                width: 8
                cap: round
        highway:
            filter:
                kind: highway
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: '#4f4b4b'
                    width: 12
                    outline:
                        color: grey
                        width: 1.5
        minor_road:
            filter:
                kind: minor_road
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: '#4f4b4b'
                    width: 5

    buildings:
        data: { source: xyz_osm }
        draw:
            polygons:
                style: buildingsStyle
                #order: function() { return feature.sort_rank; }
                color: '#241e1e'
        3d-buildings:
            filter: { $zoom: { min: 15 } }
            draw:
                polygons:
                    style: buildingsStyle
                    extrude: function () { return feature.height > 20 || $zoom >= 16; }
        #continent labels
    earth_layer_land_label:
        data: { source: xyz_osm , layer: earth}
        filter:
            all:
            - kind: continent
            not:
                - kind: island
        draw:
            text:
                text_source: global.language_text_source
                font:
                    family: FiraGo
                    weight: 400
                    fill: '#f4f4f4'
                    size: 30
                    priority: 1


    country:
        data: { source: xyz_osm , layer: places}
        filter:
            all:
            - kind: country
        draw:
            text:
                text_source: global.language_text_source
                text_wrap: 30
                priority: 10
                font:
                    family: FiraGo
                    size: [
                        [1, 8],
                        [2, 10],
                        [3, 12],
                        [4, 14],
                        [5, 16]
                        ]
                    fill: '#ffffff'
                    stroke: {
                        color: [0.000, 0.000, 0.000, 0.50],
                        width: 1.5px
                        }
                    transform: uppercase
                    weight: 400


    locality_10million_capital:
        data: { source: xyz_osm , layer: places}
        filter: function() { return ((((feature.kind == 'locality' )&& feature.population) && (feature.population > 10000000 || feature.country_capital))&& feature.country_capital)}
        draw:
            text:
                text_source: global.language_text_source
                text_wrap: 30
                priority: 39
                font:
                    family: FiraGo
                    weight: bold
                    size: [
                        [1, 9.6],
                        [2, 11.2],
                        [3, 12.8],
                        [4, 14.4],
                        [5, 16],
                        [6, 19.2],
                        [7, 22.4],
                        [8, 25.6],
                        [9, 28.8],
                        [10, 32]
                        ]
                    fill: '#ffffff'
                    stroke: {
                        color: [0.000, 0.000, 0.000, 0.50],
                        width: [
                            [4, 2],
                            [6, 3],
                            [10, 6],
                            [12, 8]
                        ]
                        }
    locality_10million:
        data: { source: xyz_osm , layer: places}
        filter: function() { return ((feature.kind == 'locality' && feature.population) && (feature.population > 10000000 || feature.country_capital))}
        draw:
            text:
                text_source: global.language_text_source
                text_wrap: 30
                priority: 39
                font:
                    size: [
                        [1, 9.6],
                        [2, 11.2],
                        [3, 12.8],
                        [4, 14.4],
                        [5, 16],
                        [6, 19.2],
                        [7, 22.4],
                        [8, 25.6],
                        [9, 28.8],
                        [10, 32]
                        ]
                    family: FiraGO
                    fill: '#ffffff'
                    stroke: {
                        color: [0.000, 0.000, 0.000, 0.50],
                        width: [
                            [4, 1.5],
                            [6, 2],
                            [10, 4],
                            [12, 5]
                        ]
                        }

    locality_label_1million:
        data: { source: xyz_osm , layer: places}
        filter: function() { return (feature.kind = 'locality' && feature.population && (feature.region_capital || feature.population > 1000000))}
        draw:
            text:
                text_source: global.language_text_source
                text_wrap: 30
                priority: 40
                font:
                    size: [
                        [2, 9.6],
                        [3, 11.2],
                        [4, 12.8],
                        [5, 14.4],
                        [6, 16],
                        [7, 19.2],
                        [8, 22.4],
                        [9, 25.6],
                        [10, 28.8],
                        [11, 32]
                        ]
                    family: FiraGO
                    fill: '#ffffff'
                    stroke: {
                        color: [0.000, 0.000, 0.000, 0.50],
                        width: [
                            [2, 1],
                            [4, 1.5],
                            [6, 2],
                            [10, 4],
                            [12, 5]
                        ]
                        }


    locality_label_400k:
        data: { source: xyz_osm , layer: places}
        filter: function() { return (feature.kind = 'locality' && feature.population && feature.population > 400000)}
        draw:
            text:
                text_source: global.language_text_source
                text_wrap: 30
                priority: 41
                font:
                    size: [
                        [4, 11.2],
                        [5, 12.8],
                        [6, 16],
                        [7, 19.2],
                        [8, 22.4],
                        [9, 24],
                        [10, 25.6],
                        [11, 27.2]
                        ]
                    family: FiraGO
                    fill: '#ffffff'
                    stroke: {
                        color: [0.000, 0.000, 0.000, 0.50],
                        width: [
                            [4, 1],
                            [6, 2],
                            [8, 3],
                            [10, 4],
                            [12, 5]
                        ]
                        }

    locality_label_100k:
        data: { source: xyz_osm , layer: places}
        filter:
            all:
                - function() { return (feature.kind = 'locality' && feature.population > 100000)}
                - $zoom: {min: 5}
        draw:
            text:
                text_source: global.language_text_source
                text_wrap: 30
                priority: 42
                font:
                    family: FiraGO
                    weight: 400
                    size: [
                        [4, 9.6],
                        [5, 11.2],
                        [6, 12.8],
                        [7, 16],
                        [8, 19.2],
                        [9, 20.8],
                        [10, 22.4],
                        [11, 24],
                        [12, 25.6]
                        ]
                    fill: '#ffffff'
                    stroke: {
                        color: [0.000, 0.000, 0.000, 0.50],
                        width: [
                            [5, 1],
                            [8, 3],
                            [10, 4],
                            [12, 5]
                        ]
                        }

    locality_label_50k:
        data: { source: xyz_osm , layer: places}
        filter:
            all:
                - function() { return (feature.kind = 'locality' && feature.population > 50000)}
                - $zoom: {min: 5}
        draw:
            text:
                text_source: global.language_text_source
                text_wrap: 30
                priority: 43
                font:
                    family: FiraGo
                    size: [
                        [10, 16],
                        [11, 19.2],
                        [12, 22.4],
                        [13, 24]
                        ]
                    fill: '#ffffff'
                    stroke: {
                        color: [0.000, 0.000, 0.000, 0.50],
                        width: [
                            [10, 2],
                            [12, 3]
                        ]
                        }

    locality_label_10k:
        data: { source: xyz_osm , layer: places}
        filter:
            all:
                - function() { return (feature.kind = 'locality' && feature.population > 10000)}
                - $zoom: {min: 9}
        draw:
            text:
                text_source: global.language_text_source
                text_wrap: 30
                priority: 44
                font:
                    family: FiraGo
                    size: [
                        [11, 16],
                        [12, 17.6],
                        [13, 19.2],
                        [14, 20.8],
                        [15, 22.4]
                        ]
                    fill: '#ffffff'
                    stroke: {
                        color: [0.000, 0.000, 0.000, 0.50],
                        width: [
                            [10, 2],
                            [12, 3]
                        ]
                        }

    locality_label:
        data: { source: xyz_osm , layer: places}
        filter:
            all:
                - function() { return (feature.kind = 'locality' && feature.population <= 10000)}
                - $zoom: {min: 11}
        draw:
            text:
                text_source: global.language_text_source
                priority: 50
                font:
                    size: [
                        [11, 12.8],
                        [12, 14.4],
                        [13, 16],
                        [14, 17.6],
                        [15, 19.2]
                        ]
                    family: FiraGO
                    fill: '#ffffff'
                    stroke: {
                        color: [0.000, 0.000, 0.000, 0.50],
                        width: 2px
                        }
    #end OSM                                    

    _mostDangerousRoadJunctions:
        data: {source: mostDangerousRoadJunctions}
        filter: { $zoom: { min: 12 } }
        draw:
          points:
            style: mostDangerousRoadJunctions
            #order: 364
            #color: purple
            size: 36px
            interactive: true

    _slowDown:
        data: {source: slowDown}
        filter: { $zoom: { min: 12 } }
        draw:
          points:
            style: slowDown
            #order: 363
            #color: black
            size: 36px
            interactive: true  
    
    _callTheWinterMaintanance:
        data: {source: callTheWinterMaintanance}
        filter: { $zoom: { min: 12 } }
        draw:
          points:
            style: callTheWinterMaintanance
            #order: 362
            #color: white
            size: 36px
            interactive: true  
    
    _whereIsAStreetLight:
        data: {source: whereIsAStreetLight}
        filter: { $zoom: { min: 12 } }
        draw:
          points:
            style: whereIsAStreetLight
            #order: 361
            #color: yellow
            size: 36px
            interactive: true

    _accidentsPerCell:
        data: { source: accidentsPerCell }
        filter: { $zoom: { max: 15 } }
        #filter:
        #    Totalnumberofaccidents: { min: 0, max: 3 } 
        draw:
          polygons:
            style: dangerZones 
            #order: 360
            color: |
                    function() {
                        if ($zoom >= 12 && $zoom < 15) { 
                        var value = feature.Totalnumberofaccidents;
                        var color = value <= 4 ? "rgba(77, 172, 38, 0.1)" :
                                    value <= 7 ? "rgba(184, 225, 134, 0.1)" :
                                    value <= 13 ? "rgba(255, 128, 128, 0.1)" :
                                    value <= 22 ? "rgba(255, 64, 64, 0.1)" :
                                    value <= 88 ? "rgba(255, 0, 0, 0.1)" :
                                    "rgba(255, 247, 236, 0.3)";

                                    return color;
                        }
                        else {
                        var value = feature.Totalnumberofaccidents;
                        var color = value <= 4 ? "rgba(100, 172, 38, 0.4)" :
                                    value <= 7 ? "rgba(184, 225, 134, 0.4)" :
                                    value <= 13 ? "rgba(255, 128, 128, 0.4)" :
                                    value <= 22 ? "rgba(255, 64, 64, 0.4)" :
                                    value <= 88 ? "rgba(255, 0, 0, 0.4)" :
                                    "rgba(255, 247, 236, 0.3)";

                                    return color;
                        }                     
                        
                    }
            interactive: true

